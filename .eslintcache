[{"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\index.js":"1","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\App.js":"2","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\Router.js":"3","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\fbase.js":"4","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\Navigation.js":"5","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\routes\\Profile.js":"6","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\routes\\Auth.js":"7","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\routes\\Home.js":"8","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\Nweet.js":"9","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\AuthForm.js":"10","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\NweetFactory.js":"11"},{"size":228,"mtime":1610975401000,"results":"12","hashOfConfig":"13"},{"size":1767,"mtime":1610975401000,"results":"14","hashOfConfig":"13"},{"size":1304,"mtime":1610975401000,"results":"15","hashOfConfig":"13"},{"size":814,"mtime":1610975401000,"results":"16","hashOfConfig":"13"},{"size":1172,"mtime":1664321990246,"results":"17","hashOfConfig":"13"},{"size":1632,"mtime":1610975401000,"results":"18","hashOfConfig":"13"},{"size":1421,"mtime":1664321951261,"results":"19","hashOfConfig":"13"},{"size":2112,"mtime":1610975401000,"results":"20","hashOfConfig":"13"},{"size":2569,"mtime":1610975401000,"results":"21","hashOfConfig":"13"},{"size":2125,"mtime":1610975401000,"results":"22","hashOfConfig":"13"},{"size":2738,"mtime":1610975401000,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"11kaasp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"26"},"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\index.js",[],["53","54"],"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\App.js",[],"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\Router.js",[],"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\fbase.js",[],"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\Navigation.js",[],"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\routes\\Profile.js",["55"],"import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if(userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  /*const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection(\"nweets\")\n      .where(\"creatorId\", \"==\", userObj.uid)\n      .orderBy(\"createdAt\")\n      .get();\n    console.log(nweets.docs.map((doc) => doc.data()));\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);*/\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange} \n          type=\"text\" \n          autoFocus\n          placeholder=\"Display name\" \n          value={newDisplayName}\n          className=\"fromInput\"\n        />\n        <input \n          type=\"submit\" \n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }} \n        />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\routes\\Auth.js",[],"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\routes\\Home.js",["56","57","58","59","60","61"],"import { dbService, storageService } from \"fbase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    //console.log(userObj);\n    const [nweet, setNeweet] = useState(\"\");\n    const [nweets, setNeweets] = useState([]);\n    const [attachment, setAttachment] = useState(\"\");\n    /*const getNeweets = async() => {\n        //get은 QuarySnapshot을 return\n        const dbNweets = await dbService.collection(\"nweets\").get();\n        //내 state에 있는 각각의 document.data()를 console.log\n        dbNweets.forEach((document) => //console.log(document.data())); \n        { const nweetObject = {\n            ...document.data(),\n            id: document.id,\n        };\n            //모든 이전 nweets에 대해 배열을 리턴, 그 배열은 새로 작성한 트윗과 그 이전 것들\n            //값 대신에 함수를 전달할 수 있음, 함수를 전달하면 리액트는 이전 값에 접근할 수 있게 해줌\n            setNeweets(prev => [nweetObject, ...prev]);\n        });\n    };*/\n    useEffect(() => {\n        //getNeweets();\n        //위 방식과 이것 중 하나 선택해서 쓰면 됨\n        //이 방식은 더 적게 re-render 하기 때문에 더 빠르게 실행되도록 만들어줌\n        //무언가를 지우거나 업데이트 하든, 뭘 하든 실행이 됨\n            dbService.collection(\"nweets\").onSnapshot(snapshot => {\n            const nweetArray = snapshot.docs.map(doc => ({\n                id:doc.id,\n            ...doc.data(),\n        }));\n        setNeweets(nweetArray);\n        });\n    }, []);\n    return(\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n            {nweets.map((nweet) => (\n            <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n            </div>\n        </div>\n    )\n};\nexport default Home;","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\Nweet.js",["62"],"import { dbService, storageService } from \"fbase\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ( {nweetObj,isOwner} ) => {\n    const [editing, setEditing] = useState(false); //editing mode인지 아닌지를 알려줌\n    const [newNweet, SetNewNweet] = useState(nweetObj.text); //input에 입력된 text를 업데이트 해줌\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n        //console.log(ok);\n        if(ok){\n            //delete\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n    const toggleEditing =  () => setEditing(prev => !prev);\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        //console.log(nweetObj, newNweet);\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\n            text: newNweet,\n        });\n        setEditing(false);\n    };\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        SetNewNweet(value);\n    };\n    return (\n    <div className=\"nweet\">\n        {editing ? (\n            <>\n            <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Edit your nweet\" \n                    value={newNweet} \n                    required \n                    autoFocus\n                    onChange={onChange}\n                    className=\"formInput\"\n                />\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n            </form>\n            <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n            </span>\n            </>\n        ) : (\n        <>\n            <h4>{nweetObj.text}</h4>\n            {nweetObj.attachmentUrl && (\n                <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n            )}\n            {isOwner && (\n            <div class=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n            </div>\n            )}\n        </> \n        )}\n    </div>\n    );\n};\nexport default Nweet;","C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\AuthForm.js",["63"],"import { authService } from \"fbase\";\nimport React, { useState } from \"react\";\n\nconst inputStyles = {};\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] =  useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n    const onChange = (event) => {\n        //console.log(event.target.name);\n        const {target: {name, value}} = event;\n        if(name === \"email\"){\n            setEmail(value);\n        } else if (name === \"password\"){\n            setPassword(value);\n        }\n    };\n    const onSubmit = async(event) => {\n        event.preventDefault(); //기본 행위가 실행되는 것을 막아서 내가 컨트롤 할 수 있도록 해줌\n        try {\n            let data;\n            if (newAccount) { //create account\n            data = await authService.createUserWithEmailAndPassword(email, password);\n        } else { //log in\n            data = await authService.signInWithEmailAndPassword(email, password);\n        }\n        console.log(data);\n    } catch(error){\n        setError(error.message);\n    }};\n\n    return (\n        <>\n        <form onSubmit={onSubmit} className=\"container\">\n            <input name=\"email\" \n            type=\"email\" \n            placeholder=\"Email\" \n            required value={email}\n            onChange={onChange}\n            className=\"authInput\"\n            />\n            <input name=\"password\" \n            type=\"password\" \n            placeholder=\"Password\" \n            required value={password}\n            className=\"authInput\"\n            onChange={onChange}\n            />\n            <input type=\"submit\" \n            className=\"authInput authSubmit\"\n            value={newAccount ? \"Create Account\" : \"Sign In\"} \n            />\n            {error && <span className=\"authError\">{error}</span>}\n        </form>\n        <span onClick={toggleAccount} className=\"authSwitch\">\n            {newAccount ? \"Sign In\" : \"Create Account\"}\n        </span>\n        </>\n    );\n}\n\nexport default AuthForm;",["64","65"],"C:\\Users\\82108\\Desktop\\트위터 - 복사본\\src\\components\\NweetFactory.js",["66"],"import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { storageService, dbService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n        return;\n      }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService\n        .ref()\n        .child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    await dbService.collection(\"nweets\").add(nweetObj);\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label for=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n    <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n        <img\n          src={attachment}\n          style={{\n            backgroundImage: attachment,\n          }}\n        />\n        <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n          <span>Remove</span>\n          <FontAwesomeIcon icon={faTimes} />\n        </div>\n        </div>\n      )}\n    </form>\n  );\n};\nexport default NweetFactory;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":5,"column":1,"nodeType":"73","endLine":64,"endColumn":3},{"ruleId":"74","severity":1,"message":"75","line":1,"column":21,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"74","severity":1,"message":"78","line":4,"column":16,"nodeType":"76","messageId":"77","endLine":4,"endColumn":22},{"ruleId":"74","severity":1,"message":"79","line":9,"column":12,"nodeType":"76","messageId":"77","endLine":9,"endColumn":17},{"ruleId":"74","severity":1,"message":"80","line":9,"column":19,"nodeType":"76","messageId":"77","endLine":9,"endColumn":28},{"ruleId":"74","severity":1,"message":"81","line":11,"column":12,"nodeType":"76","messageId":"77","endLine":11,"endColumn":22},{"ruleId":"74","severity":1,"message":"82","line":11,"column":24,"nodeType":"76","messageId":"77","endLine":11,"endColumn":37},{"ruleId":"83","severity":1,"message":"84","line":57,"column":17,"nodeType":"85","endLine":57,"endColumn":80},{"ruleId":"74","severity":1,"message":"86","line":4,"column":7,"nodeType":"76","messageId":"77","endLine":4,"endColumn":18},{"ruleId":"67","replacedBy":"87"},{"ruleId":"69","replacedBy":"88"},{"ruleId":"83","severity":1,"message":"84","line":82,"column":9,"nodeType":"85","endLine":87,"endColumn":11},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'storageService' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","'nweet' is assigned a value but never used.","'setNeweet' is assigned a value but never used.","'attachment' is assigned a value but never used.","'setAttachment' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'inputStyles' is assigned a value but never used.",["89"],["90"],"no-global-assign","no-unsafe-negation"]